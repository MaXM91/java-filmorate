CREATE TABLE IF NOT EXISTS genre
(
    genre_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     varchar(20)
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name   varchar(20)
);

CREATE TABLE IF NOT EXISTS users
(
    id       int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(50)                 NOT NULL,
    login    varchar(50)                 NOT NULL,
    name     varchar(50),
    birthday timestamp without time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id_from   int,
    user_id_to     int,
    approved_by_to int DEFAULT 0,
    CONSTRAINT users_user_from_fk
        FOREIGN KEY (user_id_from) references users (id) ON DELETE CASCADE,
    CONSTRAINT users_user_to_fk
        FOREIGN KEY (user_id_to) references users (id) ON DELETE CASCADE,
    CONSTRAINT uniq_friends_string UNIQUE (user_id_from, user_id_to, approved_by_to)
);

CREATE TABLE IF NOT EXISTS films
(
    id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(100)                NOT NULL,
    description varchar(200)                NOT NULL,
    releaseDate timestamp without time zone NOT NULL,
    duration    long                        NOT NULL
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id int,
    user_id int,
    CONSTRAINT likes_films_fk
        FOREIGN KEY (film_id) references films (id) ON DELETE CASCADE,
    CONSTRAINT likes_users_fk
        FOREIGN KEY (user_id) references users (id) ON DELETE CASCADE,
    CONSTRAINT uniq_likes_string UNIQUE (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS film_mpa
(
    film_id int,
    mpa_id  int,
    CONSTRAINT films_film_mpa_fk
        FOREIGN KEY (film_id) references films (id) ON DELETE CASCADE,
    CONSTRAINT mpa_film_mpa_fk
        FOREIGN KEY (mpa_id) references mpa (mpa_id),
    CONSTRAINT uniq_film_mpa_string UNIQUE (film_id, mpa_id)
);

CREATE TABLE IF NOT EXISTS film_genre
(
    film_id  int,
    genre_id int,
    CONSTRAINT films_film_genre_fk
        FOREIGN KEY (film_id) references films (id) ON DELETE CASCADE,
    CONSTRAINT genre_film_genre_fk
        FOREIGN KEY (genre_id) references genre (genre_id),
    CONSTRAINT uniq_film_genre_string UNIQUE (film_id, genre_id)
);
